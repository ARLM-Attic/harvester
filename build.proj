<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Test">

  <Import Project="Lib\MSBuild\MSBuild.Community.Tasks\MSBuild.Community.Tasks.Targets"/>
  <UsingTask TaskName="Xunit.Runner.MSBuild.xunit" AssemblyFile="Lib\MSBuild\xUnit\xunit.runner.msbuild.dll" />

  <PropertyGroup>
    <BuildOrigin Condition="'$(BuildOrigin)' == ''">MSBuild</BuildOrigin>
    <ReleaseVersion>0.0.0.0</ReleaseVersion>
    <SolutionFile>Harvester.sln</SolutionFile>
    <BuildOutputDir>Build</BuildOutputDir>
    <ILMergeOutput>$(BuildOutputDir)\Harvester.exe</ILMergeOutput>
  </PropertyGroup>

  <Target Name="Clean">
    <RemoveDir Directories="$(BuildOutputDir)"/>
    <MSBuild Projects="$(SolutionFile)" Targets="Clean" />
  </Target>

  <Target Name="StampReleaseVersion">
    <PropertyGroup>
      <Major>1</Major>
      <Minor>0</Minor>
      <GetBuildScript><![CDATA[ public static string ScriptMain() { return Convert.ToInt32(DateTime.Now.Date.Subtract(new DateTime(2011, 2, 11)).TotalDays).ToString(); } ]]></GetBuildScript>
      <GetRevisionScript><![CDATA[ public static string ScriptMain() { return Convert.ToInt32(DateTime.Now.Subtract(DateTime.Today).TotalMinutes).ToString(); } ]]></GetRevisionScript>
    </PropertyGroup>

    <Script Language="C#" Code="$(GetBuildScript)" Imports="System">
      <Output TaskParameter="ReturnValue" PropertyName="Build" />
    </Script>

    <Script Language="C#" Code="$(GetRevisionScript)" Imports="System">
      <Output TaskParameter="ReturnValue" PropertyName="Revision" />
    </Script>

    <CreateProperty Value="$(Major).$(Minor).$(Build).$(Revision)" Condition="'$(BuildOrigin)' == 'MSBuild'">
      <Output TaskParameter="Value" PropertyName="ReleaseVersion" />
    </CreateProperty>

    <Message Text="Release Version = $(ReleaseVersion)" />
    
    <AssemblyInfo CodeLanguage="CS" OutputFile="VersionInfo.cs" AssemblyVersion="$(ReleaseVersion)" AssemblyFileVersion="$(ReleaseVersion)" AssemblyConfiguration="$(Configuration)" />
  </Target>
  
  <Target Name="PreBuild" DependsOnTargets="StampReleaseVersion">
    <!-- 
       Used by both the 'Build' target as well as the (SolutionBuildEvent) project to ensure that every build 
       whether through build.cmd or Visual Studio will generate an updated VersionInfo.cs file. Visual Studio
       does not provide a built in way to have a solution level pre-build event; using a ClassLibrary project
       and then ensuring that all other solution projects (via Project -> Project Dependencies) are dependant 
       on the (SolutionBuildEvent) will ensure that VersionInfo.cs is always replced on Build/Rebuild.
    -->
  </Target>
  
  <Target Name="Build" DependsOnTargets="Clean">
    <MSBuild Projects="$(SolutionFile)" Targets="Build" Properties="BuildOrigin=$(BuildOrigin)" />
  </Target>

  <Target Name="Test" DependsOnTargets="Build">
    <Xunit Assembly="Core.Tests\bin\$(Configuration)\Harvester.Core.Tests.dll" />
  </Target>

  <Target Name="PackageConsole">
    <PropertyGroup>
      <ConsoleWorkingDir>Console\bin\$(Configuration)</ConsoleWorkingDir>
    </PropertyGroup>

    <ItemGroup>
      <ConsoleFiles Include="$(ConsoleWorkingDir)\NLog.dll" />
      <ConsoleFiles Include="$(ConsoleWorkingDir)\Harvester.Core.dll" />
      <ConsoleFiles Include="$(ConsoleWorkingDir)\Harvester.Console.exe" />
      <ConsoleFiles Include="$(ConsoleWorkingDir)\Harvester.Console.exe.config" />
    </ItemGroup>
    
    <Zip Files="@(ConsoleFiles)" WorkingDirectory="$(ConsoleWorkingDir)" ZipFileName="$(BuildOutputDir)\Harvester.Console.zip" />
    <Copy SourceFiles="@(ConsoleFiles)" DestinationFolder="$(BuildOutputDir)\Console" />
  </Target>
  
  <Target Name="PackageWindows">
    <PropertyGroup>
      <WindowsWorkingDir>Windows\bin\$(Configuration)</WindowsWorkingDir>
    </PropertyGroup>
    
    <ItemGroup>
      <WindowsFiles Include="$(WindowsWorkingDir)\NLog.dll" />
      <WindowsFiles Include="$(WindowsWorkingDir)\Harvester.Core.dll" />
      <WindowsFiles Include="$(WindowsWorkingDir)\Harvester.exe" />
      <WindowsFiles Include="$(WindowsWorkingDir)\Harvester.exe.config" />
    </ItemGroup>

    <Zip Files="@(WindowsFiles)" WorkingDirectory="$(WindowsWorkingDir)" ZipFileName="$(BuildOutputDir)\Harvester.zip" />
    <Copy SourceFiles="@(WindowsFiles)" DestinationFolder="$(BuildOutputDir)\Windows" />
  </Target>

  <Target Name="PackageNLogIntegration">
    <PropertyGroup>
      <NLogIntegrationDir>Integration\NLog\bin\$(Configuration)</NLogIntegrationDir>
    </PropertyGroup>
    
    <ItemGroup>
      <NLogIntegrationFiles Include="$(NLogIntegrationDir)\NLog.dll" />
      <NLogIntegrationFiles Include="$(NLogIntegrationDir)\Harvester.Core.dll" />
      <NLogIntegrationFiles Include="$(NLogIntegrationDir)\Harvester.Integration.NLog.dll" />
    </ItemGroup>

    <Zip Files="@(NLogIntegrationFiles)" WorkingDirectory="$(NLogIntegrationDir)" ZipFileName="$(BuildOutputDir)\Harvester.Integration.NLog.zip" />
    <Copy SourceFiles="@(NLogIntegrationFiles)" DestinationFolder="$(BuildOutputDir)\NLog" />
  </Target>

  <Target Name="PackageLog4NetIntegration">
    <PropertyGroup>
      <Log4NetIntegrationDir>Integration\Log4Net\bin\$(Configuration)</Log4NetIntegrationDir>
    </PropertyGroup>

    <ItemGroup>
      <Log4NetIntegrationFiles Include="$(Log4NetIntegrationDir)\Log4Net.dll" />
      <Log4NetIntegrationFiles Include="$(Log4NetIntegrationDir)\Harvester.Core.dll" />
      <Log4NetIntegrationFiles Include="$(Log4NetIntegrationDir)\Harvester.Integration.Log4Net.dll" />
    </ItemGroup>

    <Zip Files="@(Log4NetIntegrationFiles)" WorkingDirectory="$(Log4NetIntegrationDir)" ZipFileName="$(BuildOutputDir)\Harvester.Integration.Log4Net.zip" />
    <Copy SourceFiles="@(Log4NetIntegrationFiles)" DestinationFolder="$(BuildOutputDir)\Log4Net" />
  </Target>

  <Target Name="PackageSetup">
    <ItemGroup>
      <Tokens Include="Version">
        <ReplacementValue>$(ReleaseVersion)</ReplacementValue>
      </Tokens>
    </ItemGroup>

    <TemplateFile Template="Harvester.wxs.template" OutputFileName="$(BuildOutputDir)\Harvester.wxs" Tokens="@(Tokens)" />
    <Exec Command="Lib\WiX\candle.exe -out $(BuildOutputDir)\Harvester.wixobj $(BuildOutputDir)\Harvester.wxs" />
    <Exec Command="Lib\WiX\light.exe -ext WixUIExtension -ext WixNetFxExtension -out $(BuildOutputDir)\Harvester.msi $(BuildOutputDir)\Harvester.wixobj" />
  </Target>

  <Target Name="Release" DependsOnTargets="Test">
    <MakeDir Directories="$(BuildOutputDir)"/>

    <CallTarget Targets="PackageConsole" />
    <CallTarget Targets="PackageWindows" />
    <CallTarget Targets="PackageNLogIntegration" />
    <CallTarget Targets="PackageLog4NetIntegration" />
    <CallTarget Targets="PackageSetup" />
  </Target>

</Project>
